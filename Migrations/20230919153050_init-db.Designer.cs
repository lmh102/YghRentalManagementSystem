// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YghRentalManagementSystem.Infra;

#nullable disable

namespace YghRentalManagementSystem.Migrations
{
    [DbContext(typeof(RentalManagementContext))]
    [Migration("20230919153050_init-db")]
    partial class initdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.AccommodationMedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccomondationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MediaId" }, "FK_Accomodation_Media_Media_idx");

                    b.HasIndex(new[] { "AccomondationId" }, "FK_accommodation_media_Accommdation_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique();

                    b.ToTable("accommodation_media", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Accommondation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("varchar(3000)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Description"), "utf8mb3");

                    b.Property<int>("EstateTypesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Policies")
                        .HasMaxLength(3000)
                        .HasColumnType("varchar(3000)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Policies"), "utf8mb3");

                    b.Property<decimal>("Quanlity")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Title"), "utf8mb3");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EstateTypesId" }, "ForeignKey_Accommodations_EstateTypes_idx");

                    b.HasIndex(new[] { "OwnerId" }, "ForeignKey_Accommondations_User_idx");

                    b.ToTable("accommondations", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Emai")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "UserId_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "UserName_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "RoleId" }, "accounts_userer_roleId_idx");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Detail")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Nation")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE1");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Amenity1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Amenity");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("varchar(3000)");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE2");

                    b.ToTable("amenities", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccommondationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float?>("Area")
                        .HasColumnType("float");

                    b.Property<int?>("BedNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("varchar(3000)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Description"), "utf8mb3");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int>("MaxOccupant")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8mb3");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccommondationId" }, "FK_Apartment_Accom_idx");

                    b.HasIndex(new[] { "OwnerId" }, "FK_Apartment_User_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE3");

                    b.ToTable("apartments", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.ApartmentMedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApartmentId" }, "FK_Apartment_Media_Apartment_idx");

                    b.HasIndex(new[] { "MediaId" }, "FK_Apartment_Media_Media_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE4");

                    b.ToTable("apartment_media", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.ApartmentsAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AmenityId" }, "FK_Amenity_idx");

                    b.HasIndex(new[] { "ApartmentId" }, "FK_Apartment_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE5");

                    b.ToTable("apartments_amenities", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceivedId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SendedId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SendedId", "ReceivedId" }, "FK_Chat_Sender_idx");

                    b.HasIndex(new[] { "ReceivedId" }, "FK_Chat_User_Receiver_idx");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique();

                    b.ToTable("chat", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Detaillmedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Description"), "utf8mb3");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE6");

                    b.ToTable("detaillmedia", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Estatetype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("EstateType1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EstateType")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("EstateType1"), "utf8mb3");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("ModifyAt")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EstateType1" }, "EstateType_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE7");

                    b.ToTable("estatetypes", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.FollowUserAccom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccomodationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDelete")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccomodationId" }, "FK_Follow_Accom_idx");

                    b.HasIndex(new[] { "UserId" }, "FK_Follow_User_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE8");

                    b.ToTable("follow_user_accom", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Notifycation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<sbyte>("IsRead")
                        .HasColumnType("tinyint")
                        .HasColumnName("isRead");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE9");

                    b.ToTable("notifycation", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationFollow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("FollowId")
                        .HasColumnType("int");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<int>("NotifycationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NotifycationId" }, "FK_Notifycation_Follow_Notifycation_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE10");

                    b.ToTable("notifycation_follow", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<int>("NotifycationId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NotifycationId" }, "FK_notifycation_reservation_Notifycation_idx");

                    b.HasIndex(new[] { "ReservationId" }, "FK_notifycation_reservation_Reservation_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE11");

                    b.ToTable("notifycation_reservation", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<int>("NotifycatonId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NotifycatonId" }, "FK_Notifycation_Review_Notifycation_idx");

                    b.HasIndex(new[] { "ReviewId" }, "FK_Notifycation_Review_Review_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE12");

                    b.ToTable("notifycation_review", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("reasons", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.ReasonReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ReasonId" }, "FK_Reason_Report_Reason_idx");

                    b.HasIndex(new[] { "ReportId" }, "FK_Reason_Report_Report_idx");

                    b.ToTable("reason_report", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccomodationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccomodationId" }, "FK_Report_Accommondation_idx");

                    b.HasIndex(new[] { "UserId" }, "FK_Report_user_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE13");

                    b.ToTable("report", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int>("NumberRoom")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApartmentId" }, "FK_Reservation_Apartment_idx");

                    b.HasIndex(new[] { "OwnerId" }, "FK_Reservation_User_Owner_idx");

                    b.HasIndex(new[] { "UserId" }, "FK_User_idx");

                    b.HasIndex(new[] { "Id" }, "idReservation_UNIQUE")
                        .IsUnique();

                    b.ToTable("reservation", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccommodationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Comment"), "utf8mb3");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Rate")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE14");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Description"), "utf8mb3");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Unavailableapartmentdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ApartmentId" }, "FK_Âprartment_idx");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE15");

                    b.ToTable("unavailableapartmentdate", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Address"), "utf8mb3");

                    b.Property<string>("AvatarId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .UseCollation("utf8mb3_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("FullName"), "utf8mb3");

                    b.Property<DateTime>("ModifyAt")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "RoleId" }, "ForeignKey_Users_Role_idx");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.AccommodationMedium", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Accommondation", "Accomondation")
                        .WithMany("AccommodationMedia")
                        .HasForeignKey("AccomondationId")
                        .IsRequired()
                        .HasConstraintName("FK_Accommodation_Media_Accommodation");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Detaillmedium", "Media")
                        .WithMany("AccommodationMedia")
                        .HasForeignKey("MediaId")
                        .IsRequired()
                        .HasConstraintName("FK_Accomodation_Media_Media");

                    b.Navigation("Accomondation");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Accommondation", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Estatetype", "EstateTypes")
                        .WithMany("Accommondations")
                        .HasForeignKey("EstateTypesId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_Accommodations_EstateTypes");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "Owner")
                        .WithMany("Accommondations")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_Accommondations_User");

                    b.Navigation("EstateTypes");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Account", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_accounts_userer");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("YghRentalManagementSystem.Infra.Models.Account", "UserId")
                        .IsRequired()
                        .HasConstraintName("ForignKey_accounts_users");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Apartment", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Accommondation", "Accommondation")
                        .WithMany("Apartments")
                        .HasForeignKey("AccommondationId")
                        .IsRequired()
                        .HasConstraintName("FK_Apartment_Accom");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "Owner")
                        .WithMany("Apartments")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_Apartment_User");

                    b.Navigation("Accommondation");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.ApartmentMedium", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Apartment", "Apartment")
                        .WithMany("ApartmentMedia")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Apartment_Media_Apartment");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Detaillmedium", "Media")
                        .WithMany("ApartmentMedia")
                        .HasForeignKey("MediaId")
                        .IsRequired()
                        .HasConstraintName("FK_Apartment_Media_Media");

                    b.Navigation("Apartment");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.ApartmentsAmenity", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Amenity", "Amenity")
                        .WithMany("ApartmentsAmenities")
                        .HasForeignKey("AmenityId")
                        .IsRequired()
                        .HasConstraintName("FK_Amenity");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Apartment", "Apartment")
                        .WithMany("ApartmentsAmenities")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Apartment");

                    b.Navigation("Amenity");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Chat", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "Received")
                        .WithMany("ChatReceiveds")
                        .HasForeignKey("ReceivedId")
                        .IsRequired()
                        .HasConstraintName("FK_Chat_User_Receiver");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "Sended")
                        .WithMany("ChatSendeds")
                        .HasForeignKey("SendedId")
                        .IsRequired()
                        .HasConstraintName("FK_Chat_User");

                    b.Navigation("Received");

                    b.Navigation("Sended");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.FollowUserAccom", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Accommondation", "Accomodation")
                        .WithMany("FollowUserAccoms")
                        .HasForeignKey("AccomodationId")
                        .IsRequired()
                        .HasConstraintName("FK_Follow_Accom");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "User")
                        .WithMany("FollowUserAccoms")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Follow_User");

                    b.Navigation("Accomodation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationFollow", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.FollowUserAccom", "Notifycation")
                        .WithMany("NotifycationFollows")
                        .HasForeignKey("NotifycationId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifycation_Follow_Follow");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Notifycation", "NotifycationNavigation")
                        .WithMany("NotifycationFollows")
                        .HasForeignKey("NotifycationId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifycation_Follow_Notifycation");

                    b.Navigation("Notifycation");

                    b.Navigation("NotifycationNavigation");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationReservation", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.NotifycationReservation", "Notifycation")
                        .WithMany("InverseNotifycation")
                        .HasForeignKey("NotifycationId")
                        .IsRequired()
                        .HasConstraintName("FK_notifycation_reservation_Notifycation");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Reservation", "Reservation")
                        .WithMany("NotifycationReservations")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK_notifycation_reservation_Reservation");

                    b.Navigation("Notifycation");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationReview", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Notifycation", "Notifycaton")
                        .WithMany("NotifycationReviews")
                        .HasForeignKey("NotifycatonId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifycation_Review_Notifycation");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Review", "Review")
                        .WithMany("NotifycationReviews")
                        .HasForeignKey("ReviewId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifycation_Review_Review");

                    b.Navigation("Notifycaton");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.ReasonReport", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Reason", "Reason")
                        .WithMany("ReasonReports")
                        .HasForeignKey("ReasonId")
                        .IsRequired()
                        .HasConstraintName("FK_Reason_Report_Reason");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.Report", "Report")
                        .WithMany("ReasonReports")
                        .HasForeignKey("ReportId")
                        .IsRequired()
                        .HasConstraintName("FK_Reason_Report_Report");

                    b.Navigation("Reason");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Report", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Accommondation", "Accomodation")
                        .WithMany("Reports")
                        .HasForeignKey("AccomodationId")
                        .IsRequired()
                        .HasConstraintName("FK_Report_Accommondation");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Report_user");

                    b.Navigation("Accomodation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Reservation", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Apartment", "Apartment")
                        .WithMany("Reservations")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_Apartment");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "Owner")
                        .WithMany("ReservationOwners")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_User_Owner");

                    b.HasOne("YghRentalManagementSystem.Infra.Models.User", "User")
                        .WithMany("ReservationUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservation_User");

                    b.Navigation("Apartment");

                    b.Navigation("Owner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Unavailableapartmentdate", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Apartment", "Apartment")
                        .WithMany("Unavailableapartmentdates")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Aprartment");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.User", b =>
                {
                    b.HasOne("YghRentalManagementSystem.Infra.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_Users_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Accommondation", b =>
                {
                    b.Navigation("AccommodationMedia");

                    b.Navigation("Apartments");

                    b.Navigation("FollowUserAccoms");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Amenity", b =>
                {
                    b.Navigation("ApartmentsAmenities");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Apartment", b =>
                {
                    b.Navigation("ApartmentMedia");

                    b.Navigation("ApartmentsAmenities");

                    b.Navigation("Reservations");

                    b.Navigation("Unavailableapartmentdates");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Detaillmedium", b =>
                {
                    b.Navigation("AccommodationMedia");

                    b.Navigation("ApartmentMedia");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Estatetype", b =>
                {
                    b.Navigation("Accommondations");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.FollowUserAccom", b =>
                {
                    b.Navigation("NotifycationFollows");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Notifycation", b =>
                {
                    b.Navigation("NotifycationFollows");

                    b.Navigation("NotifycationReviews");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.NotifycationReservation", b =>
                {
                    b.Navigation("InverseNotifycation");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Reason", b =>
                {
                    b.Navigation("ReasonReports");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Report", b =>
                {
                    b.Navigation("ReasonReports");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Reservation", b =>
                {
                    b.Navigation("NotifycationReservations");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Review", b =>
                {
                    b.Navigation("NotifycationReviews");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.Role", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("YghRentalManagementSystem.Infra.Models.User", b =>
                {
                    b.Navigation("Accommondations");

                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("Apartments");

                    b.Navigation("ChatReceiveds");

                    b.Navigation("ChatSendeds");

                    b.Navigation("FollowUserAccoms");

                    b.Navigation("Reports");

                    b.Navigation("ReservationOwners");

                    b.Navigation("ReservationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
